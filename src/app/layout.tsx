import type { Metadata } from "next";
import { Poppins } from "next/font/google";
import { getServerSession } from "next-auth";

import "./globals.css";
import Navbar from "@/components/Navbar/Navbar";
import Layout from "@/components/Layout/Layout";
import ProviderWrapper from "../provider/ProviderWrapper";
import { authOptions } from "./api/auth/[...nextauth]/options";
import { DeviceType, SessionType } from "@/type";
import MusicBox from "@/components/MusicBox/MusicBox";
import { getDeviceId } from "./utils";
import Title from "@/components/Title/Title";

const poppins = Poppins({ weight: "400", subsets: ["latin"], preload: false });

export const metadata: Metadata = {
  title: "Spotify Clone",
  description: "Generated by create next app",
};

export default async function RootLayout({
  children,
}: {
  children: React.ReactNode;
}) {
  const session: SessionType | null = await getServerSession(authOptions);

  let deviceId: DeviceType | null = null;

  if (session?.user?.accessToken) {
    const deviceIdResponse = await getDeviceId({
      accessToken: session.user.accessToken,
    });
    deviceId = deviceIdResponse ? deviceIdResponse.data : null;
  }

  return (
    <html lang="en">
      <body className={poppins.className}>
        <ProviderWrapper>
          <Layout variant="root" className="relative gap-x-2">
            {session?.user.refreshToken ? (
              <div className=" sm:flex sm:w-[350px] sm:flex-col sm:gap-2 md:w-[400px]">
                <Title />
                <Navbar />
              </div>
            ) : null}
            <Layout variant="page" className="relative ">
              {children}
            </Layout>
            {deviceId && session ? (
              <MusicBox deviceId={deviceId} session={session} />
            ) : null}
          </Layout>
        </ProviderWrapper>
      </body>
    </html>
  );
}
